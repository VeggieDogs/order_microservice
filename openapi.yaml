openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
  description: API to manage product orders, including searching and posting orders.

servers:
  - url: http://0.0.0.0:8890
    description: Local server

paths:
  /search_order:
    get:
      summary: Retrieve all orders or search by order ID
      description: Returns all orders if no order_id is specified; otherwise, returns details for a specific order.
      parameters:
        - name: order_id
          in: query
          required: false
          schema:
            type: integer
          description: The unique ID of the order.
      responses:
        "200":
          description: List of all orders or the specific order details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No order_id provided, returning all orders"
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        order_id:
                          type: integer
                        quantity:
                          type: integer
                        total_price:
                          type: number
                          format: float
                        purchase_time:
                          type: string
                          format: date-time
                        status:
                          type: string
                        seller_id:
                          type: integer
                        buyer_id:
                          type: integer
                        product_id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
        "404":
          description: No order found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No order found"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"

  /search_orders_by_id:
    get:
      summary: Search orders by user ID and role
      description: Retrieve orders associated with a specific user by their role (seller, buyer, or both).
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
          description: The unique ID of the user.
        - name: role
          in: query
          required: true
          schema:
            type: string
            enum: [seller, buyer]
          description: The role of the user (seller or buyer).
      responses:
        "200":
          description: List of orders for the specified user ID and role.
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        order_id:
                          type: integer
                        quantity:
                          type: integer
                        total_price:
                          type: number
                          format: float
                        purchase_time:
                          type: string
                          format: date-time
                        status:
                          type: string
                        seller_id:
                          type: integer
                        buyer_id:
                          type: integer
                        product_id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
        "400":
          description: Bad Request - User ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "user_id parameter is required"
        "404":
          description: No orders found for the specified user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No orders found for this user ID"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"

  /post_order:
    post:
      summary: Create a new order
      description: Create a new order with details including quantity, total price, status, seller ID, buyer ID, and product ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                total_price:
                  type: number
                  format: float
                status:
                  type: string
                seller_id:
                  type: integer
                buyer_id:
                  type: integer
                product_id:
                  type: integer
              required:
                - quantity
                - total_price
                - status
                - seller_id
                - buyer_id
                - product_id
      responses:
        "201":
          description: Order successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "New order created"
        "400":
          description: Missing required fields in the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required fields"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"
